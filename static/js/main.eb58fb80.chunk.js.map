{"version":3,"sources":["assets/noPosterSmall.png","API/api.js","Components/Loader.js","Components/Section.js","Components/Poster.js","Routes/Home.js","Routes/TV.js","Routes/DetailCompanies.js","Routes/DetailVideos.js","Routes/DetailSeasons.js","Components/MoreTab.js","Routes/Detail.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Image","props","bgUrl","ImageDescription","ImageContainer","Year","Rating","Poster","imageUrl","rating","year","isMovie","console","log","to","className","role","aria-label","Home","useState","loading","setLoading","setError","nowPlaying","setNowPlaying","upcoming","setUpcoming","popular","setPopular","fetchContents","a","data","results","useEffect","Loader","length","map","movie","poster_path","original_title","vote_average","release_date","substring","TV","topRated","setTopRated","airingToday","setAiringToday","show","original_name","first_air_date","ItemList","ul","Item","li","DetailCompanies","detail","setDetail","pathname","location","match","includes","production_companies","company","logo_path","name","DetailVideos","opts","height","width","playerVars","autoplay","videos","video","site","videoId","key","Season","Div","DetailSeasons","details","setDetails","seasons","season","air_date","Main","main","SubMenu","List","withRouter","path","component","BackImg","bgImage","Content","Cover","section","h3","SummaryContainer","Button","hr","Overview","P","p","Link","Detail","backdrop_path","require","runtime","undefined","episode_run_time","genres","genre","index","href","imdb_id","target","overview","homepage","Form","form","Input","input","Submit","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","searchHandle","error","onSubmit","type","placeholder","value","onChange","tv","SearchContainer","state","event","preventDefault","searchByTerm","setState","Loading","this","React","Component","Header","header","current","exact","render","Search","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb58fb80.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params:{\n        api_key:\"d03845c404baa3661cbd2fe2a42f026a\",\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () =>api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    // @SEE `movie/${id}`\n    movieDetail: (id) => api.get(`movie/${id}`, {params: {append_to_response: \"videos\"}}),\n    search: (term) => api.get(\"search/movie\", {params: {\"query\": encodeURIComponent(term)}}),\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    tvDetail: (id) => api.get(`tv/${id}`, {params: {append_to_response: \"videos\"}}),\n    search: (term) => api.get(\"search/tv\", {params: {\"query\": encodeURIComponent(term)}})\n}","import React from \"react\";\nimport { CircleToBlockLoading } from 'react-loadingg';\n\nexport default () => <CircleToBlockLoading />;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-top:40px;\n    margin-bottom: 30px;\n  }\n`;\n\nconst Title = styled.span`\n  margin-left: 10px;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: 200;\n  background-color: black;\n  border:3px solid black;\n  border-radius:10px;\n  opacity: 0.6;\n  box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n\n  &:hover{\n    color:red;\n  }\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 150px);\n  grid-auto-rows:auto;\n  grid-gap: 1px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position:relative;\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 230px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center;\n  transition: opacity 1s linear;\n  opacity: 0.8;\n`;\n\nconst ImageDescription = styled.div`\n  position:absolute;\n  top:0;\n  left:0;\n  background: rgba(255,255,255,0.7);\n  border-radius: 4px;\n  color: black;\n  width:150px;\n  height: 230px;\n  visibility: hidden;\n\n  display:flex;\n  flex-flow:column;\n  justify-content:space-around;\n  align-items:center;\n  transition: opacity 1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.5;\n      transform: scale(1.1);\n    }\n    ${ImageDescription} {\n      opacity: 1;\n      visibility:visible;\n      transform: scale(1.1);\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  padding: 20px;\n  font-size:15px;\n  font-weight:500;\n  text-align:center;\n`;\n\nconst Year = styled.span`\n  font-size: 13px;\n`;\n\nconst Rating = styled.span`\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\n  console.log(\"poster info :\", imageUrl, title, rating, year, isMovie);\n  return(\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : \"https://img.icons8.com/windows/2x/no-image.png\"\n          }\n        />\n\n        <ImageDescription className=\"imgDesc\">\n          <Title>\n            {/* {title && title.length > 18 ? `${title.substring(0, 18)}...` : title} */}\n            {title}\n          </Title>\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n          <Year>{year}</Year>\n        </ImageDescription>\n        \n      </ImageContainer>\n    </Container>\n  </Link>\n)};\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React, {useState, useEffect} from \"react\";\nimport { moviesApi } from \"../API/api\";\nimport Loader from \"../Components/Loader\";\nimport Section from \"../Components/Section\";\nimport Poster from \"../Components/Poster\";\n\nexport default function Home() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [nowPlaying, setNowPlaying] = useState([]);\n    const [upcoming, setUpcoming] = useState([]);\n    const [popular, setPopular] = useState([]);\n\n\n    const fetchContents = async () => {\n        try {\n            // nowPlaying\n            const { data: {results:nowPlaying} } = await moviesApi.nowPlaying();\n            console.log(\"fetch data nowPlaying :\",nowPlaying);\n            setNowPlaying(nowPlaying);\n\n            // upcoming\n            const { data: {results:upcoming} } = await moviesApi.upcoming();\n            console.log(\"fetch data upcoming :\",upcoming);\n            setUpcoming(upcoming);\n\n            // popular\n            const { data: {results:popular} } = await moviesApi.popular();\n            console.log(\"fetch data popular :\",popular);\n            setPopular(popular);\n\n        } catch {\n            setError(\"fetch data error : movie data\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect( () => {fetchContents();}, []);\n \n    return (\n        \n        <>\n            {   \n                loading ? <Loader/> :  nowPlaying && nowPlaying.length > 0 &&\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                        ))}\n                    </Section>\n            }\n            {   \n                loading ? <Loader/> :  upcoming && upcoming.length > 0 &&\n                    <Section title=\"UpComing\">\n                        {upcoming.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                        ))}\n                    </Section>\n            }\n            {   \n                loading ? <Loader/> :  popular && popular.length > 0 &&\n                    <Section title=\"Popular\">\n                        {popular.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                        ))}\n                    </Section>\n            }\n        </>\n    )\n        \n        \n}","import React, {useState, useEffect} from \"react\";\nimport { tvApi } from \"../API/api\";\nimport Loader from \"../Components/Loader\";\nimport Section from \"../Components/Section\";\nimport Poster from \"../Components/Poster\";\n\nexport default function TV() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [topRated, setTopRated] = useState([]);\n    const [popular, setPopular] = useState([]);\n    const [airingToday, setAiringToday] = useState([]);\n\n    const fetchContents = async () => {\n        try {\n            // topRated\n            const { data: {results:topRated} } = await tvApi.topRated();\n            console.log(\"fetch data topRated :\",topRated);\n            setTopRated(topRated);\n\n            // popular\n            const { data: {results:popular} } = await tvApi.popular();\n            console.log(\"fetch data popular :\",popular);\n            setPopular(popular);\n\n            // popular\n            const { data: {results:airingToday} } = await tvApi.airingToday();\n            console.log(\"fetch data airingToday :\",airingToday);\n            setAiringToday(airingToday);\n        } catch {\n            setError(\"fetch data error : tv data\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect( () => {fetchContents();}, []);\n \n    return (\n        <>\n            {\n                loading ? <Loader/> :  topRated && topRated.length > 0 &&\n                <Section title=\"Top Rated Shows\">\n                    {topRated.map(show => (\n                      <Poster\n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                      />\n                    ))}\n                </Section>\n            }\n            {\n                loading ? <Loader/> :  popular && popular.length > 0 &&\n                <Section title=\"Popular\">\n                    {popular.map(show => (\n                      <Poster\n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                      />\n                    ))}\n                </Section>\n            }\n            {\n                loading ? <Loader/> :  airingToday && airingToday.length > 0 &&\n                <Section title=\"AiringToday\">\n                    {airingToday.map(show => (\n                      <Poster\n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                      />\n                    ))}\n                </Section>\n            }\n        </>    \n    ) \n}","import React, {useState, useEffect} from \"react\";\nimport { moviesApi, tvApi } from \"../API/api\";\nimport {Link, withRouter} from \"react-router-dom\"\nimport styled from \"styled-components\";\nimport Loader from \"../Components/Loader\";\nimport MoreTab from \"../Components/MoreTab\";\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  width: 30px;\n  height: 30px;\n  background-size: cover;\n  background-position: center;\n  transition: opacity 0.1s linear;\n  margin-right: 20px;\n\n  &:hover {\n    filter: brightness(0.8);\n    transform: scale(3);\n  }\n`;\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  margin-top: 30px;\n  padding: 20px;\n`;\n\nconst ItemList = styled.ul`\n\n`;\n\nconst Item = styled.li`\n  font-size:25px;\n  font-weight:100;\n  font-weight:100;\n  margin-bottom: 10px;\n  padding:10px;\n\n  display:flex;\n  justify-content:flex-start;\n  align-items:center;\n`;\n\n\nconst NotFoundImage = \"../assets/noPosterSmall.png\";\n\nexport default function DetailCompanies(props) {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [detail, setDetail] = useState(null);\n    \n    // get path from props\n    console.log(\"detail companies props :\", props);\n    const { location : {pathname} } = props;\n    const { match : {params: {id}}} = props;\n    const isMovie = pathname.includes(\"/movie/\");\n    console.log(\"detail companies pathname is :\", pathname, isMovie, id);\n\n    const fetchContents = async () => {\n        try {\n            const { data: {production_companies: detail} } = await moviesApi.movieDetail(id);\n            console.log(\"fetch data detail :\",detail);\n            setDetail(detail);\n        } catch {\n            setError(\"fetch data error : nowPlaying\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect( () => {fetchContents();}, []);\n \n    return (\n        loading ? (\n            <>\n              <title>Loading | Nomflix</title>\n              <Loader />\n            </>\n          ) : (\n            <Container>\n                <ItemList>\n                  {  (detail && detail.length) > 0 ?\n                    detail.map ( company => (\n                    <Item key={company.id}>\n                      <Image\n                        bgUrl={\n                          company.logo_path\n                            ? `https://image.tmdb.org/t/p/w300/${company.logo_path}`\n                            : \"https://img.icons8.com/windows/2x/no-image.png\"\n                        }\n                      />\n                      {company.name}\n                    </Item>) )\n                    :\n                    <Item>\"No Result Found...\"</Item>\n                  }\n                </ItemList>\n            </Container>\n          )\n    );\n        \n        \n}","import React, {useState, useEffect} from \"react\";\nimport { moviesApi, tvApi } from \"../API/api\";\nimport styled from \"styled-components\";\nimport Loader from \"../Components/Loader\";\nimport YouTube from 'react-youtube';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  margin-top: 30px;\n  padding: 20px;\n`;\n\nconst ItemList = styled.ul`\n  display:flex;\n  flex-flow:column;\n`;\n\nconst Item = styled.li`\n  margin-bottom: 10px;\n  font-size:25px;\n  font-weight:100;\n`;\n\n\nconst NotFoundImage = \"../assets/noPosterSmall.png\";\n\nexport default function DetailVideos(props) {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [detail, setDetail] = useState(null);\n    \n    // get path from props\n    console.log(\"detail videos props :\", props);\n    const { location : {pathname} } = props;\n    const { match : {params: {id}}} = props;\n    const isMovie = pathname.includes(\"/movie/\");\n\n    // YOUTUBE OPTION\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1,\n      },\n    };\n\n    console.log(\"detail videos pathname is :\", pathname, isMovie, id);\n\n    const fetchContents = async () => {\n        try {\n            if(isMovie) {\n              const { data: \n                {videos: \n                  {results:detail}\n                } \n              } = await moviesApi.movieDetail(id);\n              console.log(\"fetch data movie detail:\",detail);\n              setDetail(detail);\n            } else {\n              const { data: \n                {videos: \n                  {results:detail}\n                } \n              } = await tvApi.tvDetail(id);\n              console.log(\"fetch data tv detail:\",detail);\n              setDetail(detail);\n            }\n            \n        } catch {\n            setError(\"fetch data error : nowPlaying\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect( () => {fetchContents();}, []);\n \n    return (\n        loading ? (\n            <>\n              <title>Loading | Nomflix</title>\n              <Loader />\n            </>\n          ) : (\n            <Container>\n                <ItemList>\n                  {  (detail && detail.length > 0) ?\n                    detail.map ( video => (\n                      <Item>\n                        ■ {video.site} : {video.name}\n                        <YouTube videoId={video.key} opts={opts} />\n                      </Item>) \n                    )\n                    :\n                    \n                    <Item>\"No Result Found...\"</Item>\n                  }\n                </ItemList>\n            </Container>\n          )\n    );   \n}","import React, {useState, useEffect} from \"react\";\nimport { moviesApi, tvApi } from \"../API/api\";\nimport {Link, withRouter} from \"react-router-dom\"\nimport styled from \"styled-components\";\nimport Loader from \"../Components/Loader\";\nimport MoreTab from \"../Components/MoreTab\";\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n\n  width: 100%;\n  height: 1000px; \n  background-size: cover;\n  background-position: center;\n  transition: opacity 0.1s linear;\n  margin-right: 20px;\n  opacity:0.5;\n  box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n  &:hover{\n    transform: scale(0.98);\n    box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n    opacity:1;\n  }\n`;\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 80%;\n  margin-top: 30px;\n  padding: 20px;\n`;\n\nconst ItemList = styled.ul`\n\n`;\n\nconst Item = styled.li`\n  font-size:25px;\n  font-weight:100;\n  font-weight:100;\n  margin-bottom: 10px;\n  padding:10px;\n`;\n\nconst Season = styled.div`\n  display:flex;\n  flex-flow:column;\n  background-color:#2c3e50;\n`;\n\nconst Div = styled.div`\n  padding:10px;\n`;\n\nconst NotFoundImage = \"../assets/noPosterSmall.png\";\n\nexport default function DetailSeasons(props) {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [details, setDetails] = useState(null);\n    \n    // get path from props\n    console.log(\"details seasons props :\", props);\n    const { location : {pathname} } = props;\n    const { match : {params: {id}}} = props;\n    const isMovie = pathname.includes(\"/movie/\");\n    console.log(\"details seasons pathname is :\", pathname, isMovie, id);\n\n    const fetchContents = async () => {\n        try {\n            const { data: {seasons: details} } = await tvApi.tvDetail(id);\n            console.log(\"fetch data tv season details :\",details);\n            setDetails(details);\n        } catch {\n            setError(\"fetch data error : nowPlaying\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect( () => {fetchContents();}, []);\n \n    return (\n        loading ? (\n            <>\n              <title>Loading | Nomflix</title>\n              <Loader />\n            </>\n          ) : (\n            <Container>\n                <ItemList>\n                  {  (details && details.length) > 0 ?\n                    details.map ( season => (\n                    <Item key={season.id}>\n                      <Season>\n                        <Div>\n                          ■ {season.name} : {season.air_date}\n                        </Div>\n                        \n                        <Image\n                          bgUrl={\n                            season &&\n                            season.poster_path ?\n                              `https://image.tmdb.org/t/p/w300/${season.poster_path}`\n                              : \"https://img.icons8.com/windows/2x/no-image.png\"\n                          }\n                        />\n                      </Season>\n                    </Item>) )\n                    :\n                    <Item>\"No Result Found...\"</Item>\n                  }\n                </ItemList>\n            </Container>\n          )\n    );\n        \n        \n}","import React from \"react\"\nimport {Route, Link, withRouter} from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport DetailCompanies from \"../Routes/DetailCompanies\"\nimport DetailVideos from \"../Routes/DetailVideos\"\nimport DetailSeasons from \"../Routes/DetailSeasons\"\n\nconst Main = styled.main`\n    margin-top: 50px;\n`;\n\nconst SubMenu = styled.div`\n    color:white;\n    width:90%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    border-radius: 20px;\n    border-width: 1px;\n\n    background-color: rgba(20,20,20,0.8);\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n    z-index:5;\n`;\n\nconst List = styled.ul`\n    display:flex;\n    justify-content:flex-start;\n    gap:10px;\n    margin-left:20px\n`;\n\nconst Item = styled.li`\n    width:80px;\n    height:40px;\n    padding:5px;\n    color:black;\n\n    padding: 5px;\n    border-radius: 20px;\n    background-color: rgba(233,233,233,0.8);\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n\n    /* @Can not press link without z-index */\n    z-index:0;\n\n    &:hover {\n        filter: brightness(0.8);\n        background-color: black;\n        transform: scale(1.1);\n        color:white;\n        opacity:0.5;\n    }\n`;\n\nfunction MoreTab(props) {\n    // get path from props\n    console.log(\"more detail props :\", props);\n    const { location : {pathname} } = props;\n    const { match : {params: {id}}} = props;\n    const isMovie = pathname.includes(\"/movie/\");\n    console.log(\"moretab (tv or movie)pathname is :\", pathname, isMovie, id);\n    return (\n        <Main>\n            <SubMenu>\n                <List>\n                    <Item>\n                        {   isMovie?\n                            <Link to={`/movie/${id}/Videos`}>Videos</Link>\n                            :\n                            <Link to={`/tv/${id}/Videos`}>Videos</Link>\n                        }\n                    </Item>\n                    <Item>\n                        {   isMovie?\n                            <Link to={`/movie/${id}/Companies`}>Companies</Link>\n                            :\n                            <Link to={`/tv/${id}/Companies`}>Companies</Link>\n                        }\n                    </Item>\n                    \n                    {   isMovie?\n                        <></>\n                        :\n                        <Item><Link to={`/tv/${id}/Seasons`}>Seasons</Link></Item>\n                    }\n                    \n                </List>\n            </SubMenu>\n            \n            <Route path=\"/movie/:id/Companies\" component={DetailCompanies} />\n            <Route path=\"/movie/:id/Videos\" component={DetailVideos} />\n            <Route path=\"/tv/:id/Companies\" component={DetailCompanies} />\n            <Route path=\"/tv/:id/Videos\" component={DetailVideos} />\n            <Route path=\"/tv/:id/Seasons\" component={DetailSeasons} />\n        </Main>\n    );\n}\n\nexport default withRouter(MoreTab);","import React, {useState, useEffect} from \"react\";\nimport { moviesApi, tvApi } from \"../API/api\";\nimport styled from \"styled-components\";\nimport Loader from \"../Components/Loader\";\nimport MoreTab from \"../Components/MoreTab\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n`;\n\nconst BackImg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  // @SEE props\n  background-image: url(${props => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.2;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  margin-top: 30px;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 92%;\n  background-image: url(${props => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  opacity:0.5;\n  box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n  &:hover{\n    transform: scale(0.98);\n    box-shadow: 1px 10px 10px blue;\n    opacity:0.8;\n  }\n`;\n\nconst Section = styled.section`\n  width: 70%;\n  padding: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nconst SummaryContainer = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: flex-start;\n  gap:10px;\n  font-size: 15px;\n  font-weight: 300;\n  padding: 10px;\n\n  border: 1px solid black;\n  border-radius: 20px;\n  border-width: 1px;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  \n  margin: 20px 0px;\n`;\n\nconst Item = styled.span`\n  padding: 5px;\n  border-radius: 20px;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nconst Hr = styled.hr`\n    width:98%;\n    margin-top: 20px;\n`;\n\nconst Button = styled.a`\n  color:blue;\n  padding: 5px;\n  border-radius: 20px;\n  border: 1px solid blue;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  /* @Can not press link without z-index */\n  z-index:0;\n  \n  &:hover {\n      transform:scale(1.1);\n  }\n`;\n\nconst Overview = styled.div`\n  font-size: 20px;\n  font-weight: 100;\n  line-height: 1.5;\n  width: 80%;\n\n  display:flex;\n  flex-flow: column;\n  justify-content: space-evenly;\n`;\n\nconst P = styled.p `\n  margin-bottom:20px;\n`;\n\nconst Link = styled.a `\n  color:blue;\n  width:110px;\n  padding: 5px;\n  border-radius: 20px;\n  border: 1px solid blue;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  /* @Can not press link without z-index */\n  z-index:0;\n  \n  &:hover {\n      transform:scale(0.98);\n      color: black;\n  }\n`\n\nconst NotFoundImage = \"../assets/noPosterSmall.png\";\n\nexport default function Detail(props) {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [detail, setDetail] = useState(null);\n    \n    // get path from props\n    console.log(\"detail props :\", props);\n    const { location : {pathname} } = props;\n    const { match : {params: {id}}} = props;\n    const isMovie = pathname.includes(\"/movie/\");\n    console.log(\"pathname is :\", pathname, isMovie, id);\n\n    const fetchContents = async () => {\n        try {\n            if (isMovie){\n              const { data: detail } = await moviesApi.movieDetail(id);\n              console.log(\"fetch movie data detail :\",detail);\n              setDetail(detail);\n            } else {\n              const { data: detail } = await tvApi.tvDetail(id);\n              console.log(\"fetch tv data detail :\",detail);\n              setDetail(detail);\n            }\n            \n        } catch {\n            setError(\"fetch data error : nowPlaying\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect( () => {fetchContents();}, []);\n \n    return (\n        loading ? (\n            <>\n              <title>Loading | Nomflix</title>\n              <Loader />\n            </>\n          ) : (\n            <Container>\n              <>\n                <title>\n                  {isMovie && detail.original_title ? detail.original_title : detail.original_name}{\" \"}\n                  {!isMovie && detail.original_name ? detail.original_name : detail.original_name}{\" \"}\n                  | Nomflix\n                </title>\n              </>\n              <BackImg\n                bgImage={`https://image.tmdb.org/t/p/original${detail.backdrop_path}`}\n              />\n              <Content>\n                <Cover\n                  bgImage={\n                    detail.poster_path\n                      ? `https://image.tmdb.org/t/p/original${detail.poster_path}`\n                      : require(\"../assets/noPosterSmall.png\")\n                  }\n                />\n                <Section>\n                  <Title>\n                    {detail.original_title\n                      ? detail.original_title\n                      : detail.original_name}\n                  </Title>\n                  <SummaryContainer>\n                    <Item>\n                      {detail.release_date\n                        ? detail.release_date.substring(0, 4)\n                        : detail.first_air_date.substring(0, 4)}\n                    </Item>\n                    <Item>\n                      { (detail.runtime || detail.runtime!==undefined) ? detail.runtime : detail.episode_run_time[0]} min\n                    </Item>\n                    <Item>\n                      {detail.genres &&\n                        detail.genres.map((genre, index) =>\n                          index === detail.genres.length - 1\n                            ? genre.name\n                            : `${genre.name} | `\n                        )}\n                    </Item>\n                    <Button href={(detail.imdb_id || detail.imdb_id!==undefined) ? `https://www.imdb.com/title/${detail.imdb_id}`:\"#\"} target=\"_blank\">imdb</Button>\n                  </SummaryContainer>\n\n                  <Overview>\n                    <P>■ OverView</P>\n                    <P>{detail.overview}</P>\n                    <Link href={(detail.homepage || detail.homepage!==undefined) ? detail.homepage:\"#\"} target=\"_blank\">HomePage</Link>\n                  </Overview>\n\n                  {/* MORE INFO TAB */}\n                  <MoreTab></MoreTab>\n                  \n                  \n                </Section>\n              </Content>\n            </Container>\n          )\n    );   \n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Poster from \"../../Components/Poster\";\nimport { moviesApi } from \"../../API/api\";\n\n\nconst Container = styled.div`\n    margin-top:50px;\n    margin-left:30px;\n`;\nconst Form = styled.form`\n    font-size:40px;\n`;\nconst Input = styled.input`\n    font-size:40px;\n    font-weight:100;\n    /* padding: 10px; */\n    border:1px solid black;\n    border-radius:10px;\n    box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n`;\nconst Submit = styled.input`\n    font-size:40px;\n    font-weight:100;\n    /* padding:10px; */\n    border:1px solid black;\n    border-radius:10px;\n    box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n`;\n\nconst SearchPresenter = ({movieResults,tvResults,searchTerm,updateTerm,searchHandle,loading,error}) => {\n    return (\n        <Container>\n            <Form onSubmit={searchHandle}>\n                <Input type=\"text\" placeholder = \"e.g. terminator\" value={searchTerm} onChange={updateTerm}></Input>\n                <Submit type=\"submit\" value=\"Search\" />\n            </Form>\n            {\n                loading ? \n                <Loader /> \n                : \n                movieResults && movieResults.length > 0 && \n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                    ))}\n                </Section>\n            }\n            {\n                loading ? \n                <Loader /> \n                : \n                tvResults && tvResults.length > 0 && \n                <Section title=\"TV Show Results\">\n                    {tvResults.map(tv => (\n                    <Poster\n                        key={tv.id}\n                        id={tv.id}\n                        imageUrl={tv.poster_path}\n                        title={tv.original_title}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date.substring(0, 4)}\n                    />\n                    ))}\n                </Section>\n            }\n        </Container>\n    );\n};\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string.isRequired,\n    updateTerm: PropTypes.func.isRequired,\n    searchHandle: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.bool.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../API/api\";\n\nclass SearchContainer extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    }\n\n    searchHandle = event => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        console.log(\"search input text is \", searchTerm)\n        if (searchTerm !== \"\")\n            this.searchByTerm();\n    };\n\n    updateTerm = event => {\n        // @TODO display input text from search input \n        const {target:{value}} = event;\n        console.log(value);\n        this.setState({searchTerm : value});\n    };\n\n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        this.setState( {Loading: true});\n        try {\n            const {data:{results:movieResults}} = await moviesApi.search(searchTerm);\n            console.log(\"search movie :\", movieResults);\n            const {data:{results:tvResults}} = await tvApi.search(searchTerm);\n            console.log(\"search tv :\", tvResults);\n            this.setState({movieResults:movieResults, tvResults:tvResults});\n        } catch {\n            this.setState({\n                error: \"Can't search movies or tv information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                updateTerm={this.updateTerm}\n                searchHandle={this.searchHandle}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}\n\nexport default SearchContainer;","import React from \"react\"\nimport {Link, withRouter} from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Header = styled.header`\n    color:white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:70px;\n    display:flex;\n    align-items:center;\n\n    background-color: rgba(20,20,20,0.8);\n    box-shadow: 1px 10px 10px rgba(230,230,230,0.7);\n    z-index:5;\n`;\n\nconst List = styled.ul`\n    display:flex;\n    margin-left:20px\n`;\n\nconst Item = styled.li`\n    width:80px;\n    height:50px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    border:1px solid white;\n    border-radius: 5px;\n    background-color:#e74c3c;\n    padding:5px;\n    font-size:23px;\n    font-weight:100;\n    margin-left:10px;\n    /* border-bottom: 5px solid ${props => (props.current? \"#3498db\": \"transparent\")}; */\n    box-shadow: 1px 10px 10px ${props => (props.current? \"#3498db\": \"transparent\")};\n    transition: border-bottom .5s ease-in-outset;\n\n    &:hover {\n        transform: scale(1.1);\n        color:black;\n    }\n`;\n\nfunction HeaderC(props) {\n    const{location:{pathname}} = props;\n    \n    console.log(props,pathname)\n    return (\n        <Header>\n            <List>\n                <Item current={pathname == \"/\"}>\n                    <Link to=\"/\">MOVIE</Link>\n                </Item>\n                <Item current={pathname == \"/tv\"}>\n                    <Link to=\"/tv\">TV</Link>\n                </Item>\n                <Item current={pathname == \"/search\"}>\n                    <Link to=\"/search\">Search</Link>\n                </Item>\n            </List>\n        </Header>\n    );\n}\n\nexport default withRouter(HeaderC);","import React from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"../Routes/Home\"\nimport TV from \"../Routes/TV\"\nimport Detail from \"../Routes/Detail\"\nimport Search from \"../Routes/Search\"\nimport Header from \"./Header\";\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            {/* @SEE do not use exact for /movie/:id/companies */}\n            <Route path=\"/movie/:id\" component={Detail} />\n            \n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/tv/:id\" component={Detail} />\n            <Route path=\"/tv/test\" render={() => \"test render called\"}  />\n            <Route path=\"/search\" exact component={Search} />\n            <Redirect path=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n)","import {createGlobalStyle} from \"styled-components\"\nimport reset from \"styled-reset\"\n\nconst globalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n        Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n        font-size:14px;\n        color:white;\n        background-color:gray;\n\n        padding-top:50px\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\"\nfunction App() {\n  return (\n    <div>\n      <Router />\n      <GlobalStyles />\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}